//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.17 at 10:02:33 AM CET 
//


package net.ivoa.parameter.visitor;

import net.ivoa.parameter.model.AbstractCondition;
import net.ivoa.parameter.model.AbstractCriterion;
import net.ivoa.parameter.model.Always;
import net.ivoa.parameter.model.AlwaysConditionalStatement;
import net.ivoa.parameter.model.And;
import net.ivoa.parameter.model.AtomicConstantExpression;
import net.ivoa.parameter.model.AtomicParameterExpression;
import net.ivoa.parameter.model.BelongToSet;
import net.ivoa.parameter.model.ConditionalClause;
import net.ivoa.parameter.model.ConditionalStatement;
import net.ivoa.parameter.model.ConstraintOnGroup;
import net.ivoa.parameter.model.Criterion;
import net.ivoa.parameter.model.DefaultValue;
import net.ivoa.parameter.model.Description;
import net.ivoa.parameter.model.Expression;
import net.ivoa.parameter.model.Function;
import net.ivoa.parameter.model.FunctionExpression;
import net.ivoa.parameter.model.If;
import net.ivoa.parameter.model.IfThenConditionalStatement;
import net.ivoa.parameter.model.IsInteger;
import net.ivoa.parameter.model.IsNull;
import net.ivoa.parameter.model.IsRational;
import net.ivoa.parameter.model.IsReal;
import net.ivoa.parameter.model.LogicalConnector;
import net.ivoa.parameter.model.MinMaxArgument;
import net.ivoa.parameter.model.MinMaxFunctionExpression;
import net.ivoa.parameter.model.Operation;
import net.ivoa.parameter.model.Or;
import net.ivoa.parameter.model.ParameterGroup;
import net.ivoa.parameter.model.ParameterReference;
import net.ivoa.parameter.model.Parameters;
import net.ivoa.parameter.model.ParenthesisContent;
import net.ivoa.parameter.model.ParenthesisCriterion;
import net.ivoa.parameter.model.Service;
import net.ivoa.parameter.model.SingleParameter;
import net.ivoa.parameter.model.Then;
import net.ivoa.parameter.model.ValueDifferentFrom;
import net.ivoa.parameter.model.ValueInRange;
import net.ivoa.parameter.model.ValueLargerThan;
import net.ivoa.parameter.model.ValueSmallerThan;
import net.ivoa.xml.pdlserver.v0.ClientServerCommunication;
import net.ivoa.xml.pdlserver.v0.Error;
import net.ivoa.xml.pdlserver.v0.Job;
import net.ivoa.xml.pdlserver.v0.PDLService;
import net.ivoa.xml.pdlserver.v0.Parameter;
import net.ivoa.xml.pdlserver.v0.Result;
import net.ivoa.xml.pdlserver.v0.User;

public interface Traverser {


    public void traverse(AbstractCondition aBean, Visitor aVisitor);

    public void traverse(AbstractCriterion aBean, Visitor aVisitor);

    public void traverse(Always aBean, Visitor aVisitor);

    public void traverse(AlwaysConditionalStatement aBean, Visitor aVisitor);

    public void traverse(And aBean, Visitor aVisitor);

    public void traverse(AtomicConstantExpression aBean, Visitor aVisitor);

    public void traverse(AtomicParameterExpression aBean, Visitor aVisitor);

    public void traverse(BelongToSet aBean, Visitor aVisitor);

    public void traverse(ConditionalClause aBean, Visitor aVisitor);

    public void traverse(ConditionalStatement aBean, Visitor aVisitor);

    public void traverse(ConstraintOnGroup aBean, Visitor aVisitor);

    public void traverse(Criterion aBean, Visitor aVisitor);

    public void traverse(DefaultValue aBean, Visitor aVisitor);

    public void traverse(Description aBean, Visitor aVisitor);

    public void traverse(Expression aBean, Visitor aVisitor);

    public void traverse(Function aBean, Visitor aVisitor);

    public void traverse(FunctionExpression aBean, Visitor aVisitor);

    public void traverse(If aBean, Visitor aVisitor);

    public void traverse(IfThenConditionalStatement aBean, Visitor aVisitor);

    public void traverse(IsInteger aBean, Visitor aVisitor);

    public void traverse(IsNull aBean, Visitor aVisitor);

    public void traverse(IsRational aBean, Visitor aVisitor);

    public void traverse(IsReal aBean, Visitor aVisitor);

    public void traverse(LogicalConnector aBean, Visitor aVisitor);

    public void traverse(MinMaxArgument aBean, Visitor aVisitor);

    public void traverse(MinMaxFunctionExpression aBean, Visitor aVisitor);

    public void traverse(Operation aBean, Visitor aVisitor);

    public void traverse(Or aBean, Visitor aVisitor);

    public void traverse(ParameterGroup aBean, Visitor aVisitor);

    public void traverse(ParameterReference aBean, Visitor aVisitor);

    public void traverse(Parameters aBean, Visitor aVisitor);

    public void traverse(ParenthesisContent aBean, Visitor aVisitor);

    public void traverse(ParenthesisCriterion aBean, Visitor aVisitor);

    public void traverse(Service aBean, Visitor aVisitor);

    public void traverse(SingleParameter aBean, Visitor aVisitor);

    public void traverse(Then aBean, Visitor aVisitor);

    public void traverse(ValueDifferentFrom aBean, Visitor aVisitor);

    public void traverse(ValueInRange aBean, Visitor aVisitor);

    public void traverse(ValueLargerThan aBean, Visitor aVisitor);

    public void traverse(ValueSmallerThan aBean, Visitor aVisitor);

    public void traverse(ClientServerCommunication aBean, Visitor aVisitor);

    public void traverse(Error aBean, Visitor aVisitor);

    public void traverse(Job aBean, Visitor aVisitor);

    public void traverse(PDLService aBean, Visitor aVisitor);

    public void traverse(Parameter aBean, Visitor aVisitor);

    public void traverse(Result aBean, Visitor aVisitor);

    public void traverse(User aBean, Visitor aVisitor);

}
