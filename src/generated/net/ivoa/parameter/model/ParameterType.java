//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.30 at 11:30:13 AM CET 
//


package net.ivoa.parameter.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ParameterType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ParameterType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="boolean"/>
 *     &lt;enumeration value="string"/>
 *     &lt;enumeration value="rational"/>
 *     &lt;enumeration value="complex"/>
 *     &lt;enumeration value="integer"/>
 *     &lt;enumeration value="real"/>
 *     &lt;enumeration value="date"/>
 *     &lt;enumeration value="binary"/>
 *     &lt;enumeration value="Table"/>
 *     &lt;enumeration value="Image"/>
 *     &lt;enumeration value="Spectrum"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ParameterType")
@XmlEnum
public enum ParameterType {


    /**
     * A representation of a boolean - e.g. true/false on/off
     * 
     */
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),

    /**
     * Data that can be interpreted as text.
     * 
     */
    @XmlEnumValue("string")
    STRING("string"),
    @XmlEnumValue("rational")
    RATIONAL("rational"),

    /**
     * A complex number
     * 
     */
    @XmlEnumValue("complex")
    COMPLEX("complex"),
    @XmlEnumValue("integer")
    INTEGER("integer"),
    @XmlEnumValue("real")
    REAL("real"),
    @XmlEnumValue("date")
    DATE("date"),

    /**
     * how to specify specific file types
     * 
     */
    @XmlEnumValue("binary")
    BINARY("binary"),

    /**
     * Data formatted in a tabular fashion
     * 
     */
    @XmlEnumValue("Table")
    TABLE("Table"),

    /**
     * An image
     * 
     */
    @XmlEnumValue("Image")
    IMAGE("Image"),

    /**
     * A spectrum
     * 
     */
    @XmlEnumValue("Spectrum")
    SPECTRUM("Spectrum");
    private final String value;

    ParameterType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ParameterType fromValue(String v) {
        for (ParameterType c: ParameterType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
