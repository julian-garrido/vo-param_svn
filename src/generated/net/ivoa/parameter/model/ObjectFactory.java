//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.30 at 11:30:13 AM CET 
//


package net.ivoa.parameter.model;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.ivoa.parameter.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.ivoa.parameter.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AlwaysConditionalStatement }
     * 
     */
    public AlwaysConditionalStatement createAlwaysConditionalStatement() {
        return new AlwaysConditionalStatement();
    }

    /**
     * Create an instance of {@link IsNull }
     * 
     */
    public IsNull createIsNull() {
        return new IsNull();
    }

    /**
     * Create an instance of {@link And }
     * 
     */
    public And createAnd() {
        return new And();
    }

    /**
     * Create an instance of {@link AtomicConstantExpression }
     * 
     */
    public AtomicConstantExpression createAtomicConstantExpression() {
        return new AtomicConstantExpression();
    }

    /**
     * Create an instance of {@link SingleParameter }
     * 
     */
    public SingleParameter createSingleParameter() {
        return new SingleParameter();
    }

    /**
     * Create an instance of {@link ConstraintOnGroup }
     * 
     */
    public ConstraintOnGroup createConstraintOnGroup() {
        return new ConstraintOnGroup();
    }

    /**
     * Create an instance of {@link AtomicParameterExpression }
     * 
     */
    public AtomicParameterExpression createAtomicParameterExpression() {
        return new AtomicParameterExpression();
    }

    /**
     * Create an instance of {@link Criterion }
     * 
     */
    public Criterion createCriterion() {
        return new Criterion();
    }

    /**
     * Create an instance of {@link IsReal }
     * 
     */
    public IsReal createIsReal() {
        return new IsReal();
    }

    /**
     * Create an instance of {@link ValueSmallerThan }
     * 
     */
    public ValueSmallerThan createValueSmallerThan() {
        return new ValueSmallerThan();
    }

    /**
     * Create an instance of {@link MinMaxFunctionExpression }
     * 
     */
    public MinMaxFunctionExpression createMinMaxFunctionExpression() {
        return new MinMaxFunctionExpression();
    }

    /**
     * Create an instance of {@link Then }
     * 
     */
    public Then createThen() {
        return new Then();
    }

    /**
     * Create an instance of {@link Operation }
     * 
     */
    public Operation createOperation() {
        return new Operation();
    }

    /**
     * Create an instance of {@link IsInteger }
     * 
     */
    public IsInteger createIsInteger() {
        return new IsInteger();
    }

    /**
     * Create an instance of {@link Or }
     * 
     */
    public Or createOr() {
        return new Or();
    }

    /**
     * Create an instance of {@link Parameters }
     * 
     */
    public Parameters createParameters() {
        return new Parameters();
    }

    /**
     * Create an instance of {@link IsRational }
     * 
     */
    public IsRational createIsRational() {
        return new IsRational();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link ParenthesisCriterion }
     * 
     */
    public ParenthesisCriterion createParenthesisCriterion() {
        return new ParenthesisCriterion();
    }

    /**
     * Create an instance of {@link DefaultValue }
     * 
     */
    public DefaultValue createDefaultValue() {
        return new DefaultValue();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link Service }
     * 
     */
    public Service createService() {
        return new Service();
    }

    /**
     * Create an instance of {@link ParameterReference }
     * 
     */
    public ParameterReference createParameterReference() {
        return new ParameterReference();
    }

    /**
     * Create an instance of {@link Description }
     * 
     */
    public Description createDescription() {
        return new Description();
    }

    /**
     * Create an instance of {@link ValueLargerThan }
     * 
     */
    public ValueLargerThan createValueLargerThan() {
        return new ValueLargerThan();
    }

    /**
     * Create an instance of {@link Always }
     * 
     */
    public Always createAlways() {
        return new Always();
    }

    /**
     * Create an instance of {@link IfThenConditionalStatement }
     * 
     */
    public IfThenConditionalStatement createIfThenConditionalStatement() {
        return new IfThenConditionalStatement();
    }

    /**
     * Create an instance of {@link ValueDifferentFrom }
     * 
     */
    public ValueDifferentFrom createValueDifferentFrom() {
        return new ValueDifferentFrom();
    }

    /**
     * Create an instance of {@link ParameterGroup }
     * 
     */
    public ParameterGroup createParameterGroup() {
        return new ParameterGroup();
    }

    /**
     * Create an instance of {@link BelongToSet }
     * 
     */
    public BelongToSet createBelongToSet() {
        return new BelongToSet();
    }

    /**
     * Create an instance of {@link ValueInRange }
     * 
     */
    public ValueInRange createValueInRange() {
        return new ValueInRange();
    }

    /**
     * Create an instance of {@link ParenthesisContent }
     * 
     */
    public ParenthesisContent createParenthesisContent() {
        return new ParenthesisContent();
    }

    /**
     * Create an instance of {@link FunctionExpression }
     * 
     */
    public FunctionExpression createFunctionExpression() {
        return new FunctionExpression();
    }

    /**
     * Create an instance of {@link MinMaxArgument }
     * 
     */
    public MinMaxArgument createMinMaxArgument() {
        return new MinMaxArgument();
    }

}
