//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.30 at 11:30:13 AM CET 
//


package net.ivoa.parameter.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import net.ivoa.parameter.visitor.Visitable;
import net.ivoa.parameter.visitor.Visitor;


/**
 * <p>Java class for IfThenConditionalStatement complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IfThenConditionalStatement">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.ivoa.net/xml/Parameter/v0.1}ConditionalStatement">
 *       &lt;sequence>
 *         &lt;element name="if" type="{http://www.ivoa.net/xml/Parameter/v0.1}If"/>
 *         &lt;element name="then" type="{http://www.ivoa.net/xml/Parameter/v0.1}Then"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IfThenConditionalStatement", propOrder = {
    "_if",
    "then"
})
public class IfThenConditionalStatement
    extends ConditionalStatement
    implements Visitable
{

    @XmlElement(name = "if", required = true)
    protected If _if;
    @XmlElement(required = true)
    protected Then then;

    /**
     * Default no-arg constructor
     * 
     */
    public IfThenConditionalStatement() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public IfThenConditionalStatement(final String comment, final If _if, final Then then) {
        super(comment);
        this._if = _if;
        this.then = then;
    }

    /**
     * Gets the value of the if property.
     * 
     * @return
     *     possible object is
     *     {@link If }
     *     
     */
    public If getIf() {
        return _if;
    }

    /**
     * Sets the value of the if property.
     * 
     * @param value
     *     allowed object is
     *     {@link If }
     *     
     */
    public void setIf(If value) {
        this._if = value;
    }

    /**
     * Gets the value of the then property.
     * 
     * @return
     *     possible object is
     *     {@link Then }
     *     
     */
    public Then getThen() {
        return then;
    }

    /**
     * Sets the value of the then property.
     * 
     * @param value
     *     allowed object is
     *     {@link Then }
     *     
     */
    public void setThen(Then value) {
        this.then = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public IfThenConditionalStatement withIf(If value) {
        setIf(value);
        return this;
    }

    public IfThenConditionalStatement withThen(Then value) {
        setThen(value);
        return this;
    }

    @Override
    public IfThenConditionalStatement withComment(String value) {
        setComment(value);
        return this;
    }

}
