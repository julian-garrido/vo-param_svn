//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.17 at 10:02:33 AM CET 
//


package net.ivoa.parameter.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import net.ivoa.parameter.visitor.Visitable;
import net.ivoa.parameter.visitor.Visitor;


/**
 * <p>Java class for MinMaxFunctionExpression complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MinMaxFunctionExpression">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.ivoa.net/xml/Parameter/v0.1}Expression">
 *       &lt;sequence>
 *         &lt;element name="expression" type="{http://www.ivoa.net/xml/Parameter/v0.1}MinMaxArgument"/>
 *         &lt;element name="power" type="{http://www.ivoa.net/xml/Parameter/v0.1}Expression" minOccurs="0"/>
 *         &lt;element name="Operation" type="{http://www.ivoa.net/xml/Parameter/v0.1}Operation" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MinMaxFunctionExpression", propOrder = {
    "expression",
    "power",
    "operation"
})
public class MinMaxFunctionExpression
    extends Expression
    implements Visitable
{

    @XmlElement(required = true)
    protected MinMaxArgument expression;
    protected Expression power;
    @XmlElement(name = "Operation")
    protected Operation operation;

    /**
     * Default no-arg constructor
     * 
     */
    public MinMaxFunctionExpression() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public MinMaxFunctionExpression(final MinMaxArgument expression, final Expression power, final Operation operation) {
        super();
        this.expression = expression;
        this.power = power;
        this.operation = operation;
    }

    /**
     * Gets the value of the expression property.
     * 
     * @return
     *     possible object is
     *     {@link MinMaxArgument }
     *     
     */
    public MinMaxArgument getExpression() {
        return expression;
    }

    /**
     * Sets the value of the expression property.
     * 
     * @param value
     *     allowed object is
     *     {@link MinMaxArgument }
     *     
     */
    public void setExpression(MinMaxArgument value) {
        this.expression = value;
    }

    /**
     * Gets the value of the power property.
     * 
     * @return
     *     possible object is
     *     {@link Expression }
     *     
     */
    public Expression getPower() {
        return power;
    }

    /**
     * Sets the value of the power property.
     * 
     * @param value
     *     allowed object is
     *     {@link Expression }
     *     
     */
    public void setPower(Expression value) {
        this.power = value;
    }

    /**
     * Gets the value of the operation property.
     * 
     * @return
     *     possible object is
     *     {@link Operation }
     *     
     */
    public Operation getOperation() {
        return operation;
    }

    /**
     * Sets the value of the operation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Operation }
     *     
     */
    public void setOperation(Operation value) {
        this.operation = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public MinMaxFunctionExpression withExpression(MinMaxArgument value) {
        setExpression(value);
        return this;
    }

    public MinMaxFunctionExpression withPower(Expression value) {
        setPower(value);
        return this;
    }

    public MinMaxFunctionExpression withOperation(Operation value) {
        setOperation(value);
        return this;
    }

}
